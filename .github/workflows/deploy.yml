name: Deploy FrontEnd

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/yochambeo-front:latest

      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > /tmp/ec2_key.pem
          chmod 600 /tmp/ec2_key.pem

      - name: Deploy to EC2
        run: |
          ssh -i /tmp/ec2_key.pem -o StrictHostKeyChecking=no ubuntu@ec2-18-225-9-140.us-east-2.compute.amazonaws.com << 'EOF'
            echo "Iniciando sesión en EC2..."
            
            echo "Ir a la carpeta raíz"
            cd yochambeo

            echo "Deteniendo y eliminando todos los contenedores existentes..."
            docker stop $(docker ps -aq) || true
            docker rm $(docker ps -aq) || true
            
            echo "Eliminando imágenes no utilizadas..."
            docker image prune -a -f
            
            # Pull tu imagen de DockerHub
            echo "Pull maxitrigo/yochambeo-front"
            docker pull maxitrigo/yochambeo-front
            
            # Pull Apache image oficial
            echo "Pull Apache image oficial"
            docker pull httpd:latest
            
            # Crear contenedor para el front
            echo "Iniciando contenedor del front"
            docker run -d --name front -p 3000:80 maxitrigo/yochambeo-front

            # Crear un contenedor para Apache
            echo "Iniciando contenedor de Apache"
            docker run -d --name apache-front -p 8080:80 httpd:latest
            
            # Configuración de Apache para apuntar al front
            echo "Configurando Apache para apuntar al front"
            docker exec -it apache-front bash -c "echo '<VirtualHost *:80>
            ProxyPass / http://front:80/
                ProxyPassReverse / http://front:80/
                </VirtualHost>' > /usr/local/apache2/conf/httpd.conf"
                
                # Habilitar el módulo proxy en Apache
                echo "Habilitando módulo proxy en Apache"
                docker exec -it apache-front bash -c "echo 'LoadModule proxy_module modules/mod_proxy.so' >> /usr/local/apache2/conf/httpd.conf"
                docker exec -it apache-front bash -c "echo 'LoadModule proxy_http_module modules/mod_proxy_http.so' >> /usr/local/apache2/conf/httpd.conf"
                
                EOF
                
