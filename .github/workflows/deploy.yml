name: Deploy FrontEnd (Apache SPA)

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/yochambeo-front:latest

      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > /tmp/ec2_key.pem
          chmod 600 /tmp/ec2_key.pem

      - name: Deploy to EC2
        run: |
          ssh -i /tmp/ec2_key.pem -o StrictHostKeyChecking=no ubuntu@ec2-18-225-9-140.us-east-2.compute.amazonaws.com << 'EOF'
            echo "Iniciando sesión en EC2..."

            echo "ir a la carpeta raiz"
            cd yochambeo

            echo "Deteniendo y eliminando todos los contenedores existentes..."
            docker stop $(docker ps -aq) || true
            docker rm $(docker ps -aq) || true
            
            echo "Configurando Apache para SPA..."
            echo '
            <Directory "/usr/local/apache2/htdocs">
              Options Indexes FollowSymLinks
              AllowOverride All
              Require all granted
            </Directory>
            RewriteEngine On
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteRule ^ /index.html [L]
            ' > ./my-httpd.conf

            echo "Corriendo contenedor Apache con config SPA..."
            docker run -d --name apache-front -p 8080:80 -v $(pwd)/my-httpd.conf:/usr/local/apache2/conf/httpd.conf ${{ secrets.DOCKER_HUB_USERNAME }}/yochambeo-front:latest

            echo "Eliminando imágenes no utilizadas..."
            docker image prune -a -f
          EOF
